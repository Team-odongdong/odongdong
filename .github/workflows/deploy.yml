# This is a basic workflow to help you get started with Actions

name: deploy

# Controls when the workflow will run


on:

  # Triggers the workflow on push or pull request events but only for the "Develop" branch
  push:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:

  # This workflow contains a single job called "build"

  deploy: # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin' # https://github.com/actions/setup-java

      ## create application-secret.yml
      - name: make application-secret.yml
        #if: contains(github.ref, 'main')
        run: |
          cd ./src/backend/src/main/resources
          touch ./application-secret.yml
          echo "${{ secrets.SECRET_YML }}" > ./application-secret.yml
        shell: bash
        
      ## create authkey.p8
      - name: make authkey.p8
        #if: contains(github.ref, 'main')
        run: |
          cd ./src/backend/src/main/resources/static
          touch ./AuthKey_T68HJLVXKX.p8
          echo "${{ secrets.AUTH_KEY }}" > ./AuthKey_T68HJLVXKX.p8
        shell: bash

      - name: Grant execute permission for gradlew
        run: |
          cd ./src/backend
          chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: |
          cd ./src/backend
          ./gradlew clean build -x test
        shell: bash

      - name: Test with Gradle
        run: |
          cd ./src/backend
          ./gradlew test

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            whoami
            cd /home
            sudo chown -R ubuntu:ubuntu ubuntu
            cd /home/ubuntu/odongdong/src/backend
             echo -e "\
             +------------------------------------+
             |              1. build              |
             +------------------------------------+"
            
            echo ">>>>>> making secret yml..."
            echo "${{ secrets.SECRET_YML }}" > ./src/main/resources/application-secret.yml
            
            echo -e "\
             >>>>>> git pull... "
            cd "/home/ubuntu/odongdong" || exit 1
            git fetch --all || exit 1
            git reset --hard origin/main || exit 1
            git pull origin main || exit 1
            chmod +x ./scripts/build.sh || exit 1
            chmod +x ./scripts/stop.sh || exit 1
            chmod +x ./scripts/start.sh || exit 1

            ./scripts/build.sh || exit 1
            ./scripts/stop.sh || exit 1
            ./scripts/start.sh || exit 1
            
            




